save.image("C:/Users/andre/Desktop/Diversos/R/Exercitando/Juros/termo_juros.RData")
load("C:/Users/andre/Desktop/Diversos/Linguagem R/Curso BDM/Exercitando/teste/teste.RData")
setwd("C:/Users/andre/Desktop/Diversos/Linguagem R/Curso BDM/Exercitando/SQLite")
dados = data.frame(
data = as.Date(c("2018-12-07","2018-12-07","2018-12-07","2018-12-07")),
papel = c("LTN","LTN","LTN","LTN"),
vencimento = as.Date(c("2019-01-01","2020-01-01","2021-01-01","2022-01-01")),
quantidade = c(100L,200L,300L,400L),
preco = c(978.3,930.2,898.3,853.4),
stringsAsFactors = F
)
dados
library(RSQLite)
#conectar ao BD
conn = dbConnect(dbDriver("SQLite"),"carteira.sqlite")
conn
dados = data.frame(
data = as.Date(c("2018-12-07","2018-12-07","2018-12-07","2018-12-07")),
papel = c("LTN","LTN","LTN","LTN"),
vencimento = as.Date(c("2019-01-01","2020-01-01","2021-01-01","2022-01-01")),
quantidade = c(100L,200L,300L,400L),
preco = c(978.3,930.2,898.3,853.4),
stringsAsFactors = F
)
dados
sql = paste0("INSERT INTO Estoque",
"(data, papel, vencimento, quantidade, preco",
"VALUES",
"(:data,:papel,:vencimento,:quantidade,:preco)")
sql
r = dbSendQuery(conn, sql, params = dados)
r = dbSendQuery(conn, sql, params = dados)
dbClearResult(r)
r = dbSendQuery(conn, sql, params = dados)
r = dbSendQuery(conn = conn, statement = sql, params = dados)
r = dbSendQuery(conn = conn, statement = sql)
sql
sql
r = dbSendQuery(conn = conn, statement = sql)
r = dbSendQuery(conn = conn, statement = sql, params = dados)
r = dbSendQuery(conn, sql, params = dados)
library(RSQLite)
#conectar ao BD
conn = dbConnect(dbDriver("SQLite"),"carteira.sqlite")
conn
dados = data.frame(
data = as.Date(c("2018-12-07","2018-12-07","2018-12-07","2018-12-07")),
papel = c("LTN","LTN","LTN","LTN"),
vencimento = as.Date(c("2019-01-01","2020-01-01","2021-01-01","2022-01-01")),
quantidade = c(100L,200L,300L,400L),
preco = c(978.3,930.2,898.3,853.4),
stringsAsFactors = F
)
dados
sql = paste0("INSERT INTO Estoque",
"(data, papel, vencimento, quantidade, preco)",
"VALUES",
"(:data,:papel,:vencimento,:quantidade,:preco)"
)
sql
sql = paste0("INSERT INTO Estoque",
" (data, papel, vencimento, quantidade, preco)",
" VALUES",
" (:data,:papel,:vencimento,:quantidade,:preco)"
)
r = dbSendQuery(conn, sql, params = dados)
dbClearResult(r)
r
r = dbSendQuery(conn, sql, params = dados)
r
sql = paste0("INSERT INTO Estoque ",
" (data, papel, vencimento, quantidade, preco) ",
"VALUES",
"(:data,:papel,:vencimento,:quantidade,:preco)"
)
r = dbSendQuery(conn, sql, params = dados)
dbClearResult(r)
#as datas foram formatadas como inteiros para o banco,
#entao vamos formatar como strinf antes de enviar
dados$data = format(dados$data,"%Y-%m-%d")
dados$vencimento = format(dados$vencimento,"%Y-%m-%d")
str(dados)
dbExecute(conn, "DELETE FROM Estoque WHERE data = 17872")
sql = paste0("INSERT INTO Estoque ",
" (data, papel, vencimento, quantidade, preco) ",
"VALUES",
"(:data,:papel,:vencimento,:quantidade,:preco)"
)
r = dbSendQuery(conn, sql, params = dados)
r
dbClearResult(r)
dbExecute(conn, "DELETE FROM Estoque WHERE data = '2018-12-07'")
dbClearResult(r)
dados$papel[3]= NA
dados
r = dbSendQuery(conn, sql, params = dados)
dbExecute(conn, "DELETE FROM Estoque WHERE data = '2018-12-07'")
dbBegin(conn)
r = dbSendQuery(conn, sql, params = dados)
dbRollback(conn)
#podemos testar se algo deu errado com o comando try()
r = try(dbSendQuery(conn, sql, params = dados))
#se nao executou com sucesso, a variavel r
##vai receber um objeto do tipo
#"try-error" com os dados do erro
str(r)
dbBegin(conn)
r = dbSendQuery(conn, sql, params = dados)
dbRollback(conn)
#podemos testar se algo deu errado com o comando try()
r = try(dbSendQuery(conn, sql, params = dados))
#se nao executou com sucesso, a variavel r
##vai receber um objeto do tipo
#"try-error" com os dados do erro
str(r)
if(is(r,"try-error")){
print("ocorreu um erro. Executando rollback...")
cat(r)
dbRollback(conn)
}else{
dbCommit(conn)
print("dados inseridos com sucesso")
}
dbExecute(conn, "DELETE FROM Estoque WHERE data = '2018-12-07'")
#TRANSACOES sao tudo ou nada para evitar gravacoes incompletas
#no banco de dados
#comecamos as transacoes com BEGIN
#e finalizamos com COMMIT
#se alguma coisa deu errado no meio do caminho podemos
#dar um ROLLBACK e voltar o bancos de dados ao seu
#estado antes do BEGIN
str(dados)
dbBegin(conn)
r = dbSendQuery(conn, sql, params = dados)
dbRollback(conn)
#podemos testar se algo deu errado com o comando try()
r = try(dbSendQuery(conn, sql, params = dados))
#se nao executou com sucesso, a variavel r
##vai receber um objeto do tipo
#"try-error" com os dados do erro
str(r)
if(is(r,"try-error")){
print("ocorreu um erro. Executando rollback...")
cat(r)
dbRollback(conn)
}else{
dbCommit(conn)
print("dados inseridos com sucesso")
}
dbExecute(conn, "DELETE FROM Estoque WHERE data = '2018-12-07'")
dbBegin(conn)
r = try(dbSendQuery(conn, sql, params = dados))
if(is(r,"try-error")){
print("ocorreu um erro. Executando rollback...")
cat(r)
dbRollback(conn)
}else{
dbCommit(conn)
print("dados inseridos com sucesso")
}
dados$papel[3]= "LTN" #consertar o df e reexecutar o bloco acima
dbBegin(conn)
r = try(dbSendQuery(conn, sql, params = dados))
if(is(r,"try-error")){
print("ocorreu um erro. Executando rollback...")
cat(r)
dbRollback(conn)
}else{
dbCommit(conn)
print("dados inseridos com sucesso")
}
r
dbDisconnect(conn)
q()
